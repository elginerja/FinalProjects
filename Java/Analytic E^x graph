//This is the analytic E^x graph. This is my own work, and on my honor I did it myself and did all the work myself.
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(-2, 2, 200)
y_exp = np.zeros(len(x))

labels = ['First Order', 'Second Order', 'Third Order', 'Fourth Order']

plt.figure(figsize=(10, 8))

for n, label in zip(range(4), labels):
    y_exp = y_exp + (x**n) / np.math.factorial(n)
    plt.plot(x, y_exp, label=label)

plt.plot(x, np.exp(x), 'k', label='Analytic e^x')  # actual graph
plt.grid()
plt.title('Taylor Series Approximations of Various Orders for e^x')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()

# Evaluate the 7th-degree polynomial at x = 1
x_eval = 1
y_eval = 0

for n in range(4):
    y_eval = y_eval + (x_eval**n) / np.math.factorial(n)

print(y_eval)
