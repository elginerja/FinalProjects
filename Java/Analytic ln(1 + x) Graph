//This is the Analytic ln(1 + x) Graph. On my honor, this is my own work, and it was not provided to me. Jack Elginer.
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(-0.9, 2, 200)  # x should be in the interval (-1, âˆž) for ln(1+x)
y_ln = np.zeros(len(x))

labels = ['Zeroth Order', 'Second Order', 'Fourth Order', 'Sixth Order']

plt.figure(figsize=(10, 8))

for n, label in zip(range(1, 8, 2), labels):  # Adjust the range to get odd powers
    y_ln = y_ln + ((-1)**((n-1)//2) * x**n) / n
    plt.plot(x, y_ln, label=label)

plt.plot(x, np.log(1+x), 'k', label='Analytic ln(1 + x)')  # actual graph
plt.grid()
plt.title('Taylor Series Approximations of Various Orders for ln(1 + x)')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()

# Evaluate the 7th-degree polynomial at x = 0.5
x_eval = 0.5
y_eval = 0

for n in range(1, 8, 2):
    y_eval = y_eval + ((-1)**((n-1)//2) * x_eval**n) / n

print(y_eval)
